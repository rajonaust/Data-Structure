// Histogram Algorithm .
// Given a list of height of consecutive rectangles .
// Find the area of largest rectangle that can be made .
#include <iostream>
#include <cstdio>
#include <stack>
using namespace std;
long long arr[30000+10] , Li[30000+10] , Ri[30000+10] ;
void find_left(int N)
{
    stack <int> st ;
    for(int i=0;i<N;i++)
    {
        while(!st.empty()&&arr[i]<=arr[st.top()]) st.pop() ;
        if(st.empty()) Li[i] = i ;
        else Li[i] = i-st.top()-1;
        st.push(i);
    }
}
void find_right(int N)
{
    stack <int> st ;
    for(int i=N-1;i>=0;i--)
    {
        while(!st.empty()&&arr[i]<=arr[st.top()]) st.pop() ;
        if(st.empty()) Ri[i] = N-i-1;
        else Ri[i] = st.top()-i-1;
        st.push(i);
    }
}
long long find_max(int N)
{
    long long area = -1 ;
    for(int i=0;i<N;i++) area=max(area,arr[i]*(Li[i]+Ri[i]+1));
    return area ;
}
int main()
{
    int N ; // N is the number of rectangles .
    scanf("%d",&N);
    for(int i=0;i<N;i++) scanf("%lld",&arr[i]);
    find_left(N);
    find_right(N);
    printf("%lld\n",find_max(N));
    return 0;
}
/*
7
2 1 4 5 1 3 3
*/
/*
8
*/
